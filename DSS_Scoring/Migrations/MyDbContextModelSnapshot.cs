// <auto-generated />
using DSS_Scoring.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DSS_Scoring.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id", "IdProyecto");

                    b.HasIndex("IdProyecto");

                    b.ToTable("Alternativas");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.HasKey("Id", "IdProyecto");

                    b.HasIndex("IdProyecto");

                    b.ToTable("Criterios");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Objetivo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Puntuacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer");

                    b.Property<int>("IdAlternativa")
                        .HasColumnType("integer");

                    b.Property<int>("IdCriterio")
                        .HasColumnType("integer");

                    b.Property<int>("Valor")
                        .HasColumnType("integer");

                    b.HasKey("Id", "IdProyecto", "IdAlternativa", "IdCriterio");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdAlternativa", "IdProyecto");

                    b.HasIndex("IdCriterio", "IdProyecto");

                    b.ToTable("Puntuaciones");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdProyecto")
                        .HasColumnType("integer");

                    b.Property<int>("IdAlternativa")
                        .HasColumnType("integer");

                    b.Property<int>("PuntuacionTotal")
                        .HasColumnType("integer");

                    b.HasKey("Id", "IdProyecto", "IdAlternativa");

                    b.HasIndex("IdProyecto");

                    b.HasIndex("IdAlternativa", "IdProyecto");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "Proyecto")
                        .WithMany("Alternativas")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "Proyecto")
                        .WithMany("Criterios")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Puntuacion", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "Proyecto")
                        .WithMany("Puntuaciones")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DSS_Scoring.Models.Alternativa", "Alternativa")
                        .WithMany("Puntuaciones")
                        .HasForeignKey("IdAlternativa", "IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DSS_Scoring.Models.Criterio", "Criterio")
                        .WithMany("Puntuaciones")
                        .HasForeignKey("IdCriterio", "IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alternativa");

                    b.Navigation("Criterio");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Resultado", b =>
                {
                    b.HasOne("DSS_Scoring.Models.Proyecto", "Proyecto")
                        .WithMany("Resultados")
                        .HasForeignKey("IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DSS_Scoring.Models.Alternativa", "Alternativa")
                        .WithMany("Resultados")
                        .HasForeignKey("IdAlternativa", "IdProyecto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Alternativa");

                    b.Navigation("Proyecto");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Alternativa", b =>
                {
                    b.Navigation("Puntuaciones");

                    b.Navigation("Resultados");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Criterio", b =>
                {
                    b.Navigation("Puntuaciones");
                });

            modelBuilder.Entity("DSS_Scoring.Models.Proyecto", b =>
                {
                    b.Navigation("Alternativas");

                    b.Navigation("Criterios");

                    b.Navigation("Puntuaciones");

                    b.Navigation("Resultados");
                });
#pragma warning restore 612, 618
        }
    }
}
